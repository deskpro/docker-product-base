#!/bin/bash

usage() {
  echo "Usage: $0 [options]"
  echo "Checks to see if the container services have brought up and are ready."
  echo
  echo "This is not the same as the healthcheck utility which actually checks container health."
  echo "is-ready only checks to see that services have actually started, and any automatic boot-time tasks"
  echo "such as database migrations have completed."
  echo
  echo "In many cases, you may actually want to use the healthcheck utility instead of is-ready."
  echo
  echo "Options:"
  echo " --wait          If not ready yet, block until the container is ready."
  echo " --timeout SECS  Used with --wait. The max time (seconds) to wait before giving up. Default: No timeout."
  echo " -v, --verbose Enable verbose output (e.g. wait ticks)."
}

declare -i wait=0
declare -i wait_timeout=31556952
declare -i is_verbose=0

ready_file="/run/container-ready"

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      usage
      exit 0
      ;;
    -v|--verbose)
      is_verbose=1
      shift
      ;;
    --wait)
      wait=1
      shift
      ;;
    --timeout)
      wait_timeout="$2"
      shift
      shift
      ;;
    *)
      # ignore
      shift
      ;;
  esac
done

output() {
  if [ "$is_verbose" = "1" ]; then
    echo "$@"
  fi
}

check_ready() {
  if [ ! -f "$ready_file" ]; then
    return 1
  fi

  return 0
}

if check_ready; then
  output "Container is ready"
  exit 0
fi

if [ "$wait" -gt "0" ]; then
  for ((n=0;n<wait_timeout;n++)); do
    if check_ready; then
      output "Container is ready"
      exit 0
    fi

    output "Waiting ..."
    sleep 1
  done
fi

if ! check_ready; then
  output "Container is not ready"
  exit 1
fi
