# These are basically supervisor logs
# or stdout from processes that supervisor manages
# that don't have their own log handling elsewhere.

# Supervisors own logs
[sources.supervisord_raw]
type = "file"
include = [
  "/var/log/supervisor/supervisord.log",
  "/var/log/supervisor/supervisord.log.1",
]
ignore_not_found = true

[transforms.process_supervisord]
type = "remap"
inputs = ["supervisord_raw"]
source = '''
if is_string(.message) && contains(string!(.message), get_env_var!("VECTOR_MARKER")) {
  abort
}

.log_group = "supervisor-procs"
.app = "supervisord"
.chan = "process"
.parsed = parse_regex(.message, r'^(?P<ts>\d+\-\d+\-\d+ \d+:\d+:\d+),\d+ (?P<lvl>\w+) (?P<msg>.*)$') ?? {}
.ts = parse_timestamp(.parsed.ts, "%Y-%m-%d %H:%M:%S") ?? now()
'''

# nginx stdout -- typically empty unless there's a very low-level error
[sources.nginx_process_raw]
type = "file"
include = [
  "/var/log/supervisor/nginx.log",
  "/var/log/supervisor/nginx.log.1",
]
ignore_not_found = true

[transforms.process_nginx]
type = "remap"
inputs = ["nginx_process_raw"]
source = '''
if is_string(.message) && contains(string!(.message), get_env_var!("VECTOR_MARKER")) {
  abort
}

.log_group = "supervisor-procs"
.app = "nginx"
.chan = "process"
.lvl = "INFO"
'''

# php_fpm stdout -- typically empty unless there's a very low-level error
[sources.php_fpm_raw]
type = "file"
include = [
  "/var/log/supervisor/php_fpm.log",
  "/var/log/supervisor/php_fpm.log.1",
]
ignore_not_found = true

[transforms.process_php_fpm]
type = "remap"
inputs = ["php_fpm_raw"]
source = '''
if is_string(.message) && contains(string!(.message), get_env_var!("VECTOR_MARKER")) {
  abort
}

.log_group = "supervisor-procs"
.app = "php_fpm"
.chan = "process"
.lvl = "INFO"
'''
