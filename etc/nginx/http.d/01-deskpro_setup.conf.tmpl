upstream dp_default {
  random two least_conn;
  {{range math.Seq (getenv "PHP_FPM_DP_DEFAULT_NUM_POOLS" "4")}}
  server unix:/run/php_fpm_dp_default_{{.}}.sock max_fails=0 fail_timeout=0;
  {{end}}
}

upstream dp_agent {
  random two least_conn;
  {{range math.Seq (getenv "PHP_FPM_DP_AGENT_NUM_POOLS" "6") }}
  server unix:/run/php_fpm_dp_agent_{{.}}.sock max_fails=0 fail_timeout=0;
  {{end}}
}

upstream dp_internal {
  server unix:/run/php_fpm_dp_internal.sock max_fails=0 fail_timeout=0;
}

upstream dp_broadcaster {
  server unix:/run/php_fpm_dp_broadcaster.sock max_fails=0 fail_timeout=0;
}

# dpv5_api_backend: Use separate fpm-pool for internal requests
map $http_authorization $dpv5_api_backend {
    ~internal "dp_internal";
    default   "dp_default";
}

# ports to use for each protocol
# (e.g. if user is mapping ports then we need the real port used from their browser)
map $scheme $port_for_scheme {
  "https" {{ getenv "HTTP_USER_SET_HTTPS_PORT" "443" }};
  default {{ getenv "HTTP_USER_SET_HTTP_PORT" "80" }};
}

map $scheme $proto_for_scheme {
  "https" {{ getenv "HTTP_USER_SET_HTTPS_PROTO" "https" }};
  default {{ getenv "HTTP_USER_SET_HTTP_PROTO" "http" }};
}
